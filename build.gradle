buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.ratpack:ratpack-gradle:0.9.17'
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.8'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
    }
}

allprojects {
    group = 'me.libs'
    version = '1-SNAPSHOT'
    apply plugin: 'idea'
    repositories {
        jcenter()
    }
}

project(':server') {
    repositories {
        maven { url 'http://clinker.netty.io/nexus/content/repositories/snapshots' }
    }

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'io.ratpack.ratpack-groovy'
    apply plugin: 'net.saliman.cobertura'
    apply plugin: 'com.github.kt3k.coveralls'

    dependencies {
        compile ratpack.dependency('jackson')
        compile 'org.mongodb:mongodb-driver:3.0.2'
        testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    }

    run {
        systemProperty 'mongoUri', System.getProperty('mongoUri', null)
    }

    test {
        filter {
            includeTestsMatching "*Spec"
        }
    }

    cobertura {
        coverageSourceDirs = sourceSets.main.groovy.srcDirs
        coverageFormats = ['html', 'xml']
        coverageIgnoreTrivial = true
        coverageIgnores = ['org.slf4j.Logger.*']
        coverageReportDir = new File("$buildDir/reports/cobertura")
    }
}

project(':book-slicer') {
    apply plugin: 'java'
}

idea {
    project {
        //use JDK 1.8 in idea
        jdkName '1.8'
        languageLevel '1.8'
        ipr {
            withXml { provider ->
                def node = provider.asNode()
                //configure git support for the project in idea
                node.component.find { it.'@name' == 'VcsDirectoryMappings' }?.mapping[0].'@vcs' = 'Git'
            }
        }
    }
}

task stage {
    dependsOn ':server:installDist'
}